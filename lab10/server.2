Script started on Fri 22 Mar 2019 04:20:23 PM EDT
]0;sidhusul@b2270-06:/h/u15/c7/00/sidhusul/Desktop/CSC209/sidhusul/lab10b2270-06:~/Desktop/CSC209/sidhusul/lab10$ r[Kgdb bufserver
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break main[K[K[K[K[K[Kk main
Breakpoint 1 at 0x400c0e: file bufserver.c, line 18.
(gdb) ru[K[Krun
Starting program: /h/u15/c7/00/sidhusul/Desktop/CSC209/sidhusul/lab10/bufserver 

Breakpoint 1, main () at bufserver.c:18
18	int main() {
(gdb) \[Kn
21	    setbuf(stdout, NULL);
(gdb) n
23	    struct sockaddr_in *self = init_server_addr(PORT);
(gdb) n
24	    int listenfd = set_up_server_socket(self, 5);
(gdb) n
27	        int fd = accept_connection(listenfd);
(gdb) n
Waiting for a new connection...
New connection accepted from 127.0.0.1:43886
28	        if (fd < 0) {
(gdb) n
33	        char buf[BUFSIZE] = {'\0'};
(gdb) n
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) n
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) n
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) printf [K[K nbytes
$1 = 0
(gdb) printf[K room
$2 = 30
(gdb) print inbuf
$3 = 0
(gdb) pint[K[K[Kritn bugf[K[K[K[K[K[K[Knt buf
$4 = '\000' <repeats 29 times>
(gdb) n
41	            inbuf += nbytes;
(gdb) n
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) printf[K whre[K[Kere
$5 = 0
(gdb) 
$6 = 0
(gdb) n
59	                buf[where-2] = '\0';
(gdb) print where
$7 = 18
(gdb) 
$8 = 18
(gdb) n
62	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
68	                inbuf -= where;
(gdb) print inbug[Kf
$9 = 30
(gdb) where
#0  main () at bufserver.c:68
(gdb) print where
$10 = 18
(gdb) n
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) n
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) print buf
$11 = "A stitch in time\000\nA stitch in "
(gdb) print [K[K[K[K[K[Kprint where
$12 = 18
(gdb) print inbuf
$13 = 12
(gdb) n
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) af[K[K
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) pritnf[K[K[Knt after
$14 = 0x7fffffffe6cc "time"
(gdb) pritn [K[K[Knt room
$15 = 18
(gdb) print nbute[K[K[Kytes
$16 = 30
(gdb) 
$17 = 30
(gdb) n
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) print buf
$18 = "A stitch in time\000\nA stitch in "
(gdb) print [K[K[K[K[K[Kn
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) print buf
$19 = "A stitch in time\000\nA stitch in "
(gdb) 
$20 = "A stitch in time\000\nA stitch in "
(gdb) n
41	            inbuf += nbytes;
(gdb) pritn n[K[K[Kn[K[Knt inbut[Kf
$21 = 12
(gdb) i[Kprint nt[Kbytes
$22 = 18
(gdb) n
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) print buf
$23 = "A stitch in time\000\nA stitch in "
(gdb) 
$24 = "A stitch in time\000\nA stitch in "
(gdb) n
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
83	        close(fd);
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...
New connection accepted from 127.0.0.1:43906
28	        if (fd < 0) {
(gdb) quit
A debugging session is active.

	Inferior 1 [process 63768] will be killed.

Quit anyway? (y or n) n[Ky
]0;sidhusul@b2270-06:/h/u15/c7/00/sidhusul/Desktop/CSC209/sidhusul/lab10b2270-06:~/Desktop/CSC209/sidhusul/lab10$ gdb bufserverexit[Kgdb bufserver
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break main
Breakpoint 1 at 0x400c0e: file bufserver.c, line 18.
(gdb) run
Starting program: /h/u15/c7/00/sidhusul/Desktop/CSC209/sidhusul/lab10/bufserver 

Breakpoint 1, main () at bufserver.c:18
18	int main() {
(gdb) n
21	    setbuf(stdout, NULL);
(gdb) n
23	    struct sockaddr_in *self = init_server_addr(PORT);
(gdb) n
24	    int listenfd = set_up_server_socket(self, 5);
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) print listene[Kfd
$1 = 3
(gdb) n
Waiting for a new connection...
New connection accepted from 127.0.0.1:43910
28	        if (fd < 0) {
(gdb) 
33	        char buf[BUFSIZE] = {'\0'};
(gdb) 
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) 
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) 
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
83	        close(fd);
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...


New connection accepted from 127.0.0.1:43916
28	        if (fd < 0) {
(gdb) 
33	        char buf[BUFSIZE] = {'\0'};
(gdb) 
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) 
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) 
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) print room
$2 = 30
(gdb) print inbug[Kf
$3 = 0
(gdb) pirnt nb[K[K[K[K[K[K[Kritn nbyte[K[K[K[K[K[K[K[Knt nbytes
$4 = 30
(gdb) n
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) nprint nbytes[1Pinbuf
$5 = 30
(gdb) n
59	                buf[where-2] = '\0';
(gdb) pwinr t[K[K[K[K[K[Kritn whre[K[K[K[K[K[K[Knt where
$6 = 18
(gdb) n
62	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
68	                inbuf -= where;
(gdb) bn[K[Kn
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) n
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
78	            after = &(buf[inbuf]);
(gdb) n
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
83	        close(fd);
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...
New connection accepted from 127.0.0.1:43918
28	        if (fd < 0) {
(gdb) 
33	        char buf[BUFSIZE] = {'\0'};
(gdb) 
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) 
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) 
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
83	        close(fd);
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...
New connection accepted from 127.0.0.1:43920
28	        if (fd < 0) {
(gdb) 
33	        char buf[BUFSIZE] = {'\0'};
(gdb) 
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) 
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) 
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	                buf[where-2] = '\0';
(gdb) 
62	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
68	                inbuf -= where;
(gdb) 
73	                memmove(buf, &(buf[where]), inbuf);
(gdb) 
53	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
78	            after = &(buf[inbuf]);
(gdb) 
79	            room = BUFSIZE - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
83	        close(fd);
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...



^C
Program received signal SIGINT, Interrupt.
0x00007ffff7b150a0 in __accept_nocancel ()
    at ../sysdeps/unix/syscall-template.S:84
84	../sysdeps/unix/syscall-template.S: No such file or directory.
(gdb) quit
A debugging session is active.

	Inferior 1 [process 64159] will be killed.

Quit anyway? (y or n) y
]0;sidhusul@b2270-06:/h/u15/c7/00/sidhusul/Desktop/CSC209/sidhusul/lab10b2270-06:~/Desktop/CSC209/sidhusul/lab10$ # so the accepting server socket wait  s[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K will  accept the [K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K even if the vl[K[Kc[K[Kc[K clietn [K[K[Knt side were to r un their sockets loko[K[Koking for server sockets to accept, the s[K[K[K[K[Kand the server socket was  in the middle of processing the perev[K[K[K[Krevious socket, the [K[K[K[K[K[K onn[K[K[Kconnection, the [Kse new client se rvers would be connected to and processed in the next urnn[K[K[K[K[K running of the cleitn [K[K[K[K[K[K[Kserver
]0;sidhusul@b2270-06:/h/u15/c7/00/sidhusul/Desktop/CSC209/sidhusul/lab10b2270-06:~/Desktop/CSC209/sidhusul/lab10$ exit
exit

Script done on Fri 22 Mar 2019 04:31:29 PM EDT
